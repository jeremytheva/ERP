/**
 * @file Firestore Security Rules
 * @description This ruleset enforces a basic security model that grants all authenticated users full access to all data. This is for rapid prototyping only and is NOT suitable for production use.
 *
 * Data Structure:
 * - Top-level collections: /games/{gameId}, /tasks/{taskId}, /settings/{settingsId}, /competitor_log/{logId}, /users/{userId}.
 * - No subcollections are explicitly defined.
 *
 * Key Security Decisions:
 * - All authenticated users can read and write all data.
 * - This is a deliberately insecure configuration for prototyping purposes.
 *
 * WARNING: This ruleset is extremely permissive. Before deploying to production, you MUST implement more granular access control based on user roles, ownership, or other relevant criteria.
 */
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    /**
     * @description Grants read and write access to all authenticated users for all documents in the database.
     * @path /databases/{database}/documents/{document=**}
     * @allow (read, write): Any authenticated user can read and write any document.
     * @deny (read, write): None. All authenticated users are allowed.
     * @principle Grants full access to all authenticated users.
     */
    match /{document=**} {
      allow read, write: if request.auth != null;
    }
  }
}