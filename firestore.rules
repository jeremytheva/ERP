/**
 * @file Firestore Security Rules
 * @description This ruleset defines access control for the ERPsim Dashboard application.
 *
 * Core Philosophy:
 * The rules prioritize security by default, restricting data access unless explicitly allowed.
 * Public read access is enabled only for specific collections where it's appropriate.
 * All write operations require authentication and authorization.
 *
 * Data Structure:
 * - /games/{gameId}: Stores game state information. Public read, no writes.
 * - /tasks/{taskId}: Stores predefined tasks. Public read, no writes.
 * - /settings/{settingsId}: Stores team settings. Public read, no writes.
 * - /competitor_log/{logId}: Stores competitor log entries. Public read, no writes.
 *
 * Key Security Decisions:
 * - Public read access is granted to the `/games`, `/tasks`, `/settings`, and `/competitor_log` collections.
 * - No write access is granted through the rules to `/games`, `/tasks`, `/settings`, and `/competitor_log` collections.
 */
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /**
     * @description Grants public read access to game state data. Write access is denied.
     * @path /games/{gameId}
     * @allow (get, list): Any user can read game state.
     * @deny (create, update, delete): No user can create, update, or delete game state through rules.
     * @principle Allows public read access for game state data.
     */
    match /games/{gameId} {
      allow get, list: if true;
      allow create, update, delete: if false;
    }

    /**
     * @description Grants public read access to predefined tasks. Write access is denied.
     * @path /tasks/{taskId}
     * @allow (get, list): Any user can read task definitions.
     * @deny (create, update, delete): No user can create, update, or delete task definitions through rules.
     * @principle Allows public read access for task definitions.
     */
    match /tasks/{taskId} {
      allow get, list: if true;
      allow create, update, delete: if false;
    }

    /**
     * @description Grants public read access to team settings. Write access is denied.
     * @path /settings/{settingsId}
     * @allow (get, list): Any user can read team settings.
     * @deny (create, update, delete): No user can create, update, or delete team settings through rules.
     * @principle Allows public read access for team settings.
     */
    match /settings/{settingsId} {
      allow get, list: if true;
      allow create, update, delete: if false;
    }

    /**
     * @description Grants public read access to competitor log entries. Write access is denied.
     * @path /competitor_log/{logId}
     * @allow (get, list): Any user can read competitor log entries.
     * @deny (create, update, delete): No user can create, update, or delete competitor log entries through rules.
     * @principle Allows public read access for competitor log entries.
     */
    match /competitor_log/{logId} {
      allow get, list: if true;
      allow create, update, delete: if false;
    }
  }
}