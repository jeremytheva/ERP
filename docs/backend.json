{
  "entities": {
    "UserProfile": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "UserProfile",
      "type": "object",
      "description": "Represents a user profile within the ERPsim Dashboard application.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the user profile."
        },
        "username": {
          "type": "string",
          "description": "The username or display name of the user."
        }
      },
      "required": [
        "id",
        "username"
      ]
    },
    "KpiData": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "KpiData",
      "type": "object",
      "description": "Represents Key Performance Indicator (KPI) data for the dashboard.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the KPI data entry."
        },
        "companyValuation": {
          "type": "number",
          "description": "The company valuation KPI."
        },
        "netIncome": {
          "type": "number",
          "description": "The net income KPI."
        },
        "inventoryValue": {
          "type": "number",
          "description": "The inventory value KPI."
        },
        "totalEmissions": {
          "type": "number",
          "description": "The total emissions KPI."
        },
        "timestamp": {
          "type": "string",
          "description": "Timestamp of when the KPI data was recorded.",
          "format": "date-time"
        }
      },
      "required": [
        "id",
        "companyValuation",
        "netIncome",
        "inventoryValue",
        "totalEmissions",
        "timestamp"
      ]
    },
    "ActionItem": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "ActionItem",
      "type": "object",
      "description": "Represents an action item in the user's to-do list.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the action item."
        },
        "userId": {
          "type": "string",
          "description": "Reference to UserProfile. (Relationship: UserProfile 1:N ActionItem)"
        },
        "description": {
          "type": "string",
          "description": "Description of the action item."
        },
        "isCompleted": {
          "type": "boolean",
          "description": "Indicates whether the action item is completed."
        }
      },
      "required": [
        "id",
        "userId",
        "description",
        "isCompleted"
      ]
    },
    "CompetitorAnalysisLog": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "CompetitorAnalysisLog",
      "type": "object",
      "description": "Represents a log entry for competitor analysis.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the competitor analysis log entry."
        },
        "authorId": {
          "type": "string",
          "description": "Reference to UserProfile. (Relationship: UserProfile 1:N CompetitorAnalysisLog)"
        },
        "teamName": {
          "type": "string",
          "description": "Name of the competitor team being analyzed."
        },
        "notes": {
          "type": "string",
          "description": "Notes about the competitor's strategy or performance."
        },
        "timestamp": {
          "type": "string",
          "description": "Timestamp of when the log entry was created.",
          "format": "date-time"
        }
      },
      "required": [
        "id",
        "authorId",
        "teamName",
        "notes",
        "timestamp"
      ]
    }
  },
  "auth": {
    "providers": [
      "password",
      "anonymous"
    ]
  },
  "firestore": {
    "structure": [
      {
        "path": "/userProfiles/{userId}",
        "definition": {
          "entityName": "UserProfile",
          "schema": {
            "$ref": "#/backend/entities/UserProfile"
          },
          "description": "Stores user profile data.  Uses path-based ownership for simple authorization rules.",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier for the user."
            }
          ]
        }
      },
      {
        "path": "/kpiData/{kpiId}",
        "definition": {
          "entityName": "KpiData",
          "schema": {
            "$ref": "#/backend/entities/KpiData"
          },
          "description": "Stores Key Performance Indicator (KPI) data. Accessible globally for analysis and display on the dashboard.",
          "params": [
            {
              "name": "kpiId",
              "description": "The unique identifier for the KPI data entry."
            }
          ]
        }
      },
      {
        "path": "/userProfiles/{userId}/actionItems/{actionItemId}",
        "definition": {
          "entityName": "ActionItem",
          "schema": {
            "$ref": "#/backend/entities/ActionItem"
          },
          "description": "Stores action items specific to each user. Uses path-based ownership for security.",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier for the user."
            },
            {
              "name": "actionItemId",
              "description": "The unique identifier for the action item."
            }
          ]
        }
      },
      {
        "path": "/userProfiles/{userId}/competitorAnalysisLogs/{logId}",
        "definition": {
          "entityName": "CompetitorAnalysisLog",
          "schema": {
            "$ref": "#/backend/entities/CompetitorAnalysisLog"
          },
          "description": "Stores competitor analysis logs specific to each user.  Uses path-based ownership for security.",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier for the user."
            },
            {
              "name": "logId",
              "description": "The unique identifier for the competitor analysis log entry."
            }
          ]
        }
      }
    ],
    "reasoning": "The Firestore structure is designed to ensure authorization independence, clarity, and scalability for the ERPsim Dashboard application. User profiles are stored in a dedicated collection. KPI data is stored in its own collection without user-specific scoping to allow for global access and analysis, recognizing it is not tightly coupled with specific users but represents overall game state. Action items and competitor analysis logs are structured as subcollections under user documents, enabling straightforward path-based authorization rules and efficient querying of user-specific data. This structure facilitates secure `list` operations (QAPs) by isolating data based on ownership and purpose, thus avoiding the need for complex filtering within rules. The membership map pattern is not applicable in this scenario as all entities are based on individual ownership or global data."
  }
}