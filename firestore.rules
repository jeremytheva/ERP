/**
 * @fileoverview Firestore Security Rules for ERPsim Dashboard.
 *
 * Core Philosophy:
 * This ruleset prioritizes ease of prototyping by focusing on access control,
 * while relaxing data validation constraints. This allows for rapid iteration
 * on the data model while maintaining a secure authorization perimeter. Data validation should happen on client.
 *
 * Data Structure:
 * - /games/{gameId}: Stores the game state for each simulation. Publicly readable.
 * - /tasks/{taskId}: Stores task definitions. Publicly readable.
 * - /settings/{settingsId}: Stores team settings. Publicly readable.
 * - /competitor_log/{logId}: Stores competitor log entries. Publicly readable.
 *
 * Key Security Decisions:
 * - No user-specific data or private subcollections are present in this model.
 * - All top-level collections are publicly readable to simplify data access during prototyping.
 * - Write access to all collections is disallowed for all users. This maintains a secure initial posture.
 */
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /**
     * @description Allows anyone to read game state; restricts all writes.
     * @path /games/{gameId}
     * @allow (get, list)
     * @deny (create, update, delete)
     * @principle Public read, no writes allowed
     */
    match /games/{gameId} {
      allow get, list: if true;
      allow create, update, delete: if false;
    }

    /**
     * @description Allows anyone to read task definitions; restricts all writes.
     * @path /tasks/{taskId}
     * @allow (get, list)
     * @deny (create, update, delete)
     * @principle Public read, no writes allowed
     */
    match /tasks/{taskId} {
      allow get, list: if true;
      allow create, update, delete: if false;
    }

    /**
     * @description Allows anyone to read team settings; restricts all writes.
     * @path /settings/{settingsId}
     * @allow (get, list)
     * @deny (create, update, delete)
     * @principle Public read, no writes allowed
     */
    match /settings/{settingsId} {
      allow get, list: if true;
      allow create, update, delete: if false;
    }

    /**
     * @description Allows anyone to read competitor log entries; restricts all writes.
     * @path /competitor_log/{logId}
     * @allow (get, list)
     * @deny (create, update, delete)
     * @principle Public read, no writes allowed
     */
    match /competitor_log/{logId} {
      allow get, list: if true;
      allow create, update, delete: if false;
    }
  }
}